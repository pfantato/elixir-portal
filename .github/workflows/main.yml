name: Elixir CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.13.4]
        otp: [24]

    steps:
      - uses: actions/checkout@v2

      - name: Setup elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      # - name: Retrieve Mix Dependencies Cache
      #   uses: actions/cache@v1
      #   id: mix-cache # id to use in retrieve action
      #   with:
      #     path: deps
      #     key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install Mix Dependencies
        # if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix deps.get

      - name: Check Formatting
        run: mix format --check-formatted

      - name: Run Tests
        id: mix-test
        run: mix test

      - name: Force push to gh-pages
        run: |
          # Generate docs
          mix docs

          # Setup
          cd doc
          git init --initial-branch gh-pages
          git remote add origin git@github.com:pfantato/elixir-portal.git
          git config user.name "Patrick Fantato"
          git config user.email "me@pfantato.space"
          eval `ssh-agent -s`
          ssh-add - <<< '${{ secrets.GH_PAGES_SSH }}'

          # Push
          git add .
          git commit -m "mix docs"
          git push -u origin gh-pages -f
